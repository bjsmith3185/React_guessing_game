{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Title/Title.js","components/Ending/Ending.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","onClick","clickImage","name","alt","src","image","Wrapper","children","Title","score","topScore","Ending","condition","restart","App","state","gameArray","gameOver","startRound","_this","setTopScore","checkForWinner","array","numberArray","i","clicked","push","length","endGame","shuffledArray","shuffle","setState","temporaryValue","randomIndex","currentIndex","Math","floor","random","console","log","concat","newGameArray","hasBeenClicked","k","status","resetGameArray","map","item","beginGameReset","seeResults","render","components_Wrapper_Wrapper","components_Title_Title","components_Ending_Ending","components_Card_Card","key","this","friends","Component","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5d617c6b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = props => (\n  <div className=\"card\">\n    <div className=\"img-container\" onClick={() => props.clickImage(props.name)}>\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default Card;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => (\n    <div className=\"title\">\n        <h1 className=\"header\">{props.children}</h1>\n        <h3 className=\"score\">current score: {props.score}</h3>\n        <h4 className=\"top-score\">top score: {props.topScore}</h4>\n    </div>\n)\n\nexport default Title;\n","import React from \"react\";\nimport \"./Ending.css\";\n\nconst Ending = props => (\n    <div className=\"ending\">\n        <h1 className=\"ending-title\">{props.condition}</h1>\n        <h4 className=\"ending\">Awesome Game! You Scored {props.score}</h4>\n        <button className=\"restart\" onClick={() => props.restart()}>Play Again?</button>\n      \n    </div>\n)\n\nexport default Ending;\n","\nimport React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Ending from \"./components/Ending\";\nimport friends from \"./friends.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n\n  state = {\n    gameArray: [],\n    score: 0,\n    topScore: 0,\n    gameOver: false,\n    condition: \"\",\n\n  };\n\n  beginGameReset() {\n    this.setState({\n      gameArray: friends,\n      score: 0,\n      gameOver: false,\n      condition: \"\",\n    })\n  };\n\n  componentDidMount() {\n    this.beginGameReset();\n  };\n\n  startRound = () => {\n    this.setTopScore();\n\n    this.checkForWinner(this.state.gameArray)\n  };\n\n  checkForWinner = (array) => {\n    let numberArray = [];\n\n    for (var i in array) {\n      if (!array[i].clicked) {\n        numberArray.push(\"false\")\n      }\n    };\n\n    if (numberArray.length === 0) {\n      this.endGame(\"winner\");\n    } else {\n      var shuffledArray = this.shuffle(this.state.gameArray)\n      this.setState({\n        gameArray: shuffledArray\n      })\n    }\n\n  };\n\n\n  shuffle = (array) => {\n    var currentIndex = array.length;\n    var temporaryValue, randomIndex;\n\n    while (0 !== currentIndex) {\n\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  };\n\n  clickImage = name => {\n    console.log(` this is the name: ${name}.`);\n\n    var newGameArray = {};\n    newGameArray = this.state.gameArray;\n    var hasBeenClicked = false;\n\n    for (var k = 0; k < newGameArray.length; k++) {\n      if (newGameArray[k].name === name) {\n        if (newGameArray[k].clicked === true) {\n          hasBeenClicked = true;\n        }\n      }\n    };\n\n    if (hasBeenClicked) {\n      this.endGame(\"loser\")\n    } else {\n      for (var i = 0; i < newGameArray.length; i++) {\n        if (newGameArray[i].name === name) {\n          newGameArray[i].clicked = true;\n          break;\n        }\n      }\n\n      this.setState({\n        gameArray: newGameArray,\n        score: this.state.score + 1,\n        topScore: this.state.topScore + 1\n      })\n\n      this.startRound();\n    }\n  };\n\n  setTopScore = () => {\n\n    if (this.state.topScore === this.state.gameArray.length) {\n      this.setState({\n        topScore: this.state.gameArray.length\n      })\n    }\n  };\n\n  endGame = (status) => {\n    let condition;\n    if (status === \"loser\") {\n      condition = \"loser\"\n    } else {\n      condition = \"winner\"\n    }\n\n    this.setState({\n      gameOver: true,\n      condition: condition\n    })\n  };\n\n  restart = () => {\n    let resetGameArray = this.state.gameArray.map(item => {\n      return item.clicked = false;\n    });\n\n    this.setState({\n      gameArray: resetGameArray\n    })\n\n    this.beginGameReset();\n  };\n\n\n  seeResults = () => {\n    console.log(\"this is the gamearray\")\n    console.log(this.state.gameArray)\n    console.log(`this is the score ${this.state.score}`)\n  };\n\n\n\n  render = () => {\n    return (\n      <Wrapper>\n\n        <Title score={this.state.score} topScore={this.state.topScore} >Click an image but dont click it twice!!!</Title>\n\n        {this.state.gameOver ? (\n\n          <Ending score={this.state.score} condition={this.state.condition} restart={this.restart} />\n\n        ) : (\n\n            this.state.gameArray.map(item => (\n              <Card\n                clickImage={this.clickImage}\n                key={item.name}\n                image={item.image}\n              />\n            ))\n          )}\n\n      </Wrapper>\n    );\n  };\n};\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}